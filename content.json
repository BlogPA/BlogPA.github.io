{"pages":[{"title":"关于","text":"关于我一名在慢慢练就独有方法论的道路的未毕业的待程序员 1Hello Word 联系方式： WeChat：smart_lishuo QQ：1433618329 E-Mail：smartartian@163.com","link":"/about/index.html"},{"title":"","text":".column.is-8-widescreen{ width：73.66667%; } .column.is-4-widescreen{ width：26.33333% }","link":"/css/test.css"},{"title":"友情链接","text":"申请要求：1、内容持续更新且可以稳定访问 2、网页整洁无繁杂广告推广 3、博客主页被百度或谷歌等搜索引擎收录 4、头像能够快速加载 5、拥有独立域名 友链声明：1、本站会定期清理无法访问的友链，如果更换了链接信息请至评论区留言，谢谢合作！ 2、本站会定期查看双方是否互为友链，如果取消本站友链，本站也会将您的友链移除 申请方式：先将本站的友链添加到您的友链，相关信息如下 然后按照以下格式在本站留言区留言，待博主为您添上友链 名 称：Heson 头像链接：http://heson.xyz/images/avatar03.png 主页链接：http://heson.xyz 说明信息：人生在勤，不索何获","link":"/links/index.html"}],"posts":[{"title":"jQuery 选择器（一）","text":"jQuery 选择器允许对 HTML 元素组成单个元素进行操作。 jQuery 选择器是 jQuery 的根基, 在 jQuery 中, 对事件处理, 遍历 DOM 和 Ajax 操作都依赖于选择器 jQuery 中的选择器用于定位页面元素，源于 CSS 选择器，但比 CSS 选择求更强大。 jQuery 中的选择器使用工厂函数作为容器，语法结构如下： 1var element = $(selector); selector：作为参数，表示 jQuery 的选择器。 返回值：jQuery 的工厂函数会返回一个 jQuery 对象。 1$('#one').css(&quot;background&quot;,&quot;#bfa&quot;); 选择器的分类jQuery 的选择器共 10 种，其中有一种是第三版新增的，按照分类方法的不同类别不同。 jQuery 选择器的分类： 基本选择器 ID 选择器 元素选择器 类选择器 通配符选择器 组合选择器 层级选择器 后代选择器 子选择器 相邻兄弟选择器 普通兄弟选择器 基本过滤选择器 :frist过滤选择器 :last过滤选择器 :even过滤选择器 :odd过滤选择器 :eq()过滤选择器 :gt()过滤选择器 :lt()过滤选择器 :not()过滤选择器 :header过滤选择器 animated过滤选择器 :not(selector)过滤选择器 内容过滤选择器 :contains() 过滤选择器 :empty 过滤选择器 parent 过滤选择器 has() 过滤选择器 可见性过滤选择器 :hidden 过滤选择器 :visible 过滤选择器 属性过滤选择器 [attr] 过滤选择器 [attr=value] 过滤选择器 [attr!=value] 过滤选择器 [attr^=value] 过滤选择器 [attr$=value] 过滤选择器 [attr*=value] 过滤选择器 组合属性过滤选择器 子元素过滤选择器 :nth-child 过滤选择器 :first-child() 过滤选择器 last-child 过滤选择器 only-child 过滤选择器 表单过滤选择器 :enabled 过滤选择器 :disabled 过滤选择器 :checked 过滤选择器 selected 过滤选择器 表单对象属性过滤选择器 混淆选择器（第三版新增） 基本选择器jQuery 的基本选择器以下几种： 选择器 描述 ID 选择器 根据给定的 ID 匹配一个元素 元素选择器 根据给定的元素名称匹配元素 类选择器 根据给定的 css 类名匹配元素 通配符选择器 匹配所有元素 组合选择器 将每一个选择器匹配到的元素合并后一起返回 说明：由于 jQuery 对象是类数组对象，即使匹配的元素只有一个，返回的结果依旧是类数组对象。 用法示例： 1234567891011121314151617181920212223242526&lt;body&gt; &lt;div id=&quot;d1&quot;&gt;一块测试的 div&lt;/div&gt; &lt;div id=&quot;d2&quot; class=&quot;cls&quot;&gt;另一块测试的 div&lt;/div&gt;&lt;/body&gt;&lt;script&gt; // ID 选择器 console.log($('#d1')); console.log(&quot;这是一个 ID 选择器&quot;) // 元素选择器 console.log($('div')); console.log(&quot;这是一个元素选择器&quot;) // 类选择器 console.log($('.cls')); console.log(&quot;这是一个类选择器&quot;) // 通配符选择器（匹配所有） console.log($('*')); console.log(&quot;这是一个通配符选择器&quot;) /* 组合选择器 * 并集：多个选择器之间使用逗号分隔 * 交集：多个选择器之间没有逗号分隔 */ console.log($('#d1,.cls')); console.log($('#d2.cls')); console.log(&quot;这是一个组合选择器&quot;)&lt;/script&gt; 上述代码效果如下图所示： [](https://gitee.com/project_almanac/change/raw/master/jQuery/CPIq) 层级选择器jQuery 的层级选择器以下几种： 选择器 描述 后代选择器 根据给定的祖先元素下匹配所有的后代元素 子选择器 根据给定的父元素下匹配所有的子元素 相邻兄弟选择器 根据给定的目标元素匹配下一个相邻兄弟元素 普通兄弟选择器 根据给定的目标元素匹配后面兄弟元素 用法示例： 12345678910111213141516171819202122232425262728293031&lt;body&gt; &lt;div id=&quot;parent&quot;&gt; &lt;div id=&quot;child1&quot;&gt; &lt;div id=&quot;d6&quot;&gt;&lt;/div&gt; &lt;div id=&quot;d1&quot;&gt;&lt;/div&gt; &lt;div id=&quot;d2&quot;&gt;&lt;/div&gt; &lt;div id=&quot;d3&quot;&gt;&lt;/div&gt; &lt;div id=&quot;d4&quot;&gt;&lt;/div&gt; &lt;div id=&quot;d5&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div id=&quot;child2&quot;&gt; &lt;div id=&quot;d3&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;script&gt; // 后代选择器 console.log($('#parent div')); console.log(&quot;这是一个后代选择器&quot;); // 子选择器 console.log($('#parent&gt;div')); console.log(&quot;这是一个子选择器&quot;); // 相邻兄弟选择器（给定目标元素的下一个相邻兄弟元素） console.log($('#d1+div')); console.log(&quot;这是一个相邻兄弟选择器&quot;); // 普通兄弟选择器（给定元素后面的兄弟） console.log($('d1~div')); console.log('这是一个普通兄弟选择器'); // siblings() 方法 - 获取指定元素的兄弟元素（前面+后面） console.log($('#d1').siblings('div'));&lt;/script&gt; 上述代码效果如下图所示： [](https://gitee.com/project_almanac/change/raw/master/jQuery/h72OCRTpTZqB.png) 层次选择器中的普通兄弟选择器有个 siblings() 方法能实现类似的功能。 12// siblings() 方法 - 获取指定元素的兄弟元素console.log($('#d1').siblings('div')); 普通兄弟选择器与 siblings() 方法的区别在于，普通兄弟选择器只能获取给定元素后面的兄弟元素，而 siblings() 方法可以获取所有兄弟元素。 基本过滤选择器jQuery 的基本过滤选择器有以下几种： 选择器 描述 :frist过滤选择器 获取第一个元素 :last过滤选择器 获取最后一个元素 :even过滤选择器 匹配所有索引值为偶数的元素，从 0 开始计数 :odd过滤选择器 匹配所有索引值为奇数的元素，从 0 开始计数 :eq()过滤选择器 匹配一个给定索引值的元素（等于） :gt()过滤选择器 匹配所有大于给定索引值的元素 :lt()过滤选择器 匹配所有小于给定索引值的元素 :not()过滤选择器 去除所有与给定选择器匹配的元素 :header过滤选择器 匹配如 h1，h2，h3 之类的标题元素 animated过滤选择器 匹配所有正在执行动画效果的元素 用法示例： body 部分： 1234567891011&lt;body&gt; &lt;div&gt;启嘉网&lt;/div&gt; &lt;div id=&quot;d2&quot;&gt; &lt;div id=&quot;child&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;前端开发&lt;/div&gt; &lt;div id=&quot;animated&quot;&gt;&lt;/div&gt;&lt;/body&gt; :frist 过滤选择器和 :last 过滤选择器： 获取第一个元素、获取最后一个元素 在指定范围内匹配元素中进行筛选，它们本身没有层次结构，取决于范围。 12console.log($('div:first'));console.log($('div:last')); :even过滤选择器和:odd过滤选择器： 匹配所有值为偶数或奇数的元素，从 0 开始 索引值为偶数时 -&gt; 奇数元素；索引值为奇数时 -&gt; 偶数元素 12console.log($('div:even'));console.log($('div:odd')); :eq() 过滤选择器、:gt() 过滤选择器和 :lt()过滤选择器： 匹配给定索引值等于大于或小于的元素 :eq(index)：index 表示索引值 123console.log($('div:eq(0)')); // 等于console.log($('div:gt(2)')); // 大于console.log($('div:lt(2)')); // 小于 :header过滤选择器：匹配 h1~h6 元素 1console.log($(':header')); :animated过滤选择器：匹配所有正在执行动画效果的元素（只能匹配 jQuery 实现的动画） 1234567console.log($(':animated')); function animated(){ $('#animated').slideToggle(animated);}animated(); :not()过滤选择器：去除所有与给定选择器匹配的元素 1console.log($('div:not(&quot;#child&quot;)'));","link":"/2020/12/29/jQuery%E9%80%89%E6%8B%A9%E5%99%A81/"},{"title":"jQuery 选择器（二）","text":"内容过滤选择器jQuery 的内容过滤选择器具有以下几种： 选择器 描述 :contains() 过滤选择器 匹配包含给定文本的元素 :empty 过滤选择器 匹配所有不包含子元素或者文本的空元素 parent 过滤选择器 匹配含有子元素或者文本的元素 has() 过滤选择器 匹配含有选择器所匹配的元素的元素 用法示例： body 部分 1234567&lt;body&gt; &lt;div&gt;这是一块测试 div &lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt; &lt;div id=&quot;child&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/body&gt; JavaScript 部分 12345678&lt;script&gt; // 匹配包含给定文本的元素 console.log($('div:contains(&quot;di&quot;)')); // 匹配所有不包含子元素或者文本的空元素 console.log($('div:empty')); // 匹配含有子元素或者文本的元素 console.log($('div:parent'));&lt;/script&gt; 上述代码效果如下图所示： :has() 表示包含匹配指定选择器元素的父级元素 1console.log($('div:has(&quot;#child&quot;)')[0]); 可见性过滤选择器jQuery 的可见性过滤选择器具有以下几种： 选择器 描述 :hidden 过滤选择器 匹配所有不可见元素,或者 type 为 hidden 的元素 :visible 过滤选择器 匹配所有的可见元素 body 部分 12345&lt;body&gt; &lt;div id=&quot;d1&quot;&gt;启嘉网&lt;/div&gt; &lt;div id=&quot;d2&quot;&gt;学编程，就是好&lt;/div&gt; &lt;input type=&quot;hidden&quot; value=&quot;用户名&quot;&gt;&lt;/body&gt; :hidden 选择器 不能匹配 CSS 样式元素 visibility 设置为 hidden 的隐藏元素 还能匹配 HTML 页面中不做任何显示效果的元素 用法 - 尽量确定元素类型或指定范围 1console.log($(':hidden')); :visible 选择器 匹配 CSS 样式属性 visibility 设置为 hidden 的隐藏元素 当 visibility 设置为 hidden 时的元素，依旧占有页面空间 还能匹配 HTML 页面中 和 元素 1console.log($(':visible')); 属性过滤选择器jQuery 的属性过滤选择器具有以下几种： 选择器 描述 [attr] 过滤选择器 匹配包含给定属性的元素 [attr=value] 过滤选择器 匹配给定的元素是某个特定值的元素 [attr!=value] 过滤选择器 匹配所有不含有指定的元素,或者属性不等于特定值的元素 [attr^=value] 过滤选择器 匹配给定的属性是以某些值开始的元素 [attr$=value] 过滤选择器 匹配给定的属性是以某些值结尾的元素 [attr*=value] 过滤选择器 匹配给定的属性是以包含某些值的元素 组合属性过滤选择器 匹配元素需要同时满足多个属性过滤选择器 用法示例： 1234&lt;div id=&quot;username&quot; name=&quot;d1&quot; class=&quot;mydiv&quot;&gt;&lt;/div&gt;&lt;div id=&quot;password&quot; name=&quot;d2&quot; class=&quot;mycls&quot;&gt;&lt;/div&gt;&lt;div id=&quot;d3&quot;&gt;&lt;/div&gt;&lt;div class=&quot;myd&quot;&gt;&lt;/div&gt; 12345console.log($('div[name]'));console.log($('div[class=mydiv]')); console.log($('div[class!=mydiv]'));console.log($('div[class^=my]'));console.log($('div[name=d1][class^=my]')); [attr!=value] 选择器 - 包含没有 attr 属性的元素 属性过滤选择器组合用法：交集 上述代码运行效果如下图所示： 子元素过滤选择器jQuery 的子元素过滤选择器具有以下几种： 选择器 描述 :nth-child() 过滤选择器 匹配其父元素下的第 N 个子或奇偶元素 :first-child 过滤选择器 匹配第一个子元素 last-child 过滤选择器 匹配最后一个子元素 only-child 过滤选择器 如果某个元素是父元素中唯一的子元素,那么将会被匹配 用法示例： body 部分 123456789&lt;body&gt; &lt;div id=&quot;parent&quot;&gt; &lt;div id=&quot;d1&quot;&gt;这是 id 为 d1 的 div 元素&lt;/div&gt; &lt;div id=&quot;d2&quot;&gt;这是 id 为 d2 的 div 元素&lt;/div&gt; &lt;div id=&quot;d3&quot;&gt;这是 id 为 d3 的 div 元素 &lt;div id=&quot;child&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; JavaScript 部分 1234console.log($('div:first-child'));console.log($('div:last-child'));console.log($('div:only-child')); :nth-child(index) 过滤选择器，用于匹配当前元素作为第 index 个子元素，但是 index 是从 1 开始，表示第几个 1console.log($('div:nth-child(1)')); 表单对象属性过滤选择器jQuery 的表单对象属性过滤选择器具有以下几种： 选择器 描述 :enabled 过滤选择器 匹配所有可用元素 :disabled 过滤选择器 匹配所有不可用元素 :checked 过滤选择器 匹配所有选中的被选中元素（复选框、单选框等） selected 过滤选择器 匹配所有选择的 &lt;option&gt; 元素 用法示例： 123console.log($('input:disabled'));console.log($('input:checked'));console.log($('option:selected')); 上述代码效果如下图所示： 表单选择器jQuery 的表单选择器具有以下几种： 选择器 描述 :input 选择器 匹配所有 input、textarea、select 和 button 元素 :text 选择器 匹配所有的单行文本框 :password 选择器 匹配所有密码框 :radio 选择器 匹配所有单选按钮 :checkbox 选择器 匹配所有复选框 :sumit 选择器 匹配所有提交按钮 :reset 选择器 匹配所有重置按钮 :button 选择器 匹配所有按钮 :file 选择器 匹配所有文件域 :image 选择器 匹配图像域 用法同上述选择器类似","link":"/2021/01/30/jQuery%E9%80%89%E6%8B%A9%E5%99%A82/"},{"title":"Markdown 插入视频","text":"由于 Markdown 支持 HTML 语法，会对相应的标签进行解析。所以我们可以通过 HTML 语法将视频放入到我们的 Markdown 中。 用法如下： 1&lt;iframe height=498 width=510 src=&quot;视频地址&quot;&gt; 其中 height 和 width 是 HTML 中的属性可以设置视频的大小，我们也可以使用 HTML 中的其他属性对插入视频进行相应设置。 本地插入在 src 中加入本地视频所对应的路径即可。 1&lt;iframe height=498 width=510 src=&quot;本地视频路径&quot;&gt; 在线插入在 src 中加入视频链接即可。 1&lt;iframe height=498 width=510 src=&quot;在线视频链接&quot;&gt; 在这里提供一种方法，在我们没有服务器的情况下，让本地视频获取在线链接： 以网易云为例： 我们需要插入的视频： 进入网易云的创作中心发布本地视频 找到我们发布的视频 将网页链接插入即可 这样获取整个页面肯定不太舒服，我们还可以通过开发者工具，找到单独的视频链接 1&lt;iframe height=498 width=510 src=&quot;http://vodkgeyttp9.vod.126.net/cloudmusic/1FgSA8LX_3222439799_sd.mp4?wsSecret=25dc3b1d0e2fcc4c65db0cab7d6f107d&amp;wsTime=1606454043&quot;&gt; 上述方法我们利用其他平台发布视频进行获取链接都是有效的。","link":"/2021/02/04/Markdown%20%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91/"}],"tags":[{"name":"jQuery","slug":"jQuery","link":"/tags/jQuery/"},{"name":"HTML","slug":"HTML","link":"/tags/HTML/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"}],"categories":[]}